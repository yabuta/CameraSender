#!/usr/bin/env python
# -*- coding:utf-8 -*-
  
import socket  
import sys  
import numpy  
import cv2
import time
import threading
  
# for opencv 3.0.0
  
HOST, PORT = "localhost", 12345  
  
# Receive data from the server and shut down  
quitflag=False  
recvlen=1  
frame = None
lock = threading.RLock()

class SendThread(threading.Thread):
    
    def __init__(self):
        super(SendThread,self).__init__()
        self.e = threading.Event()

    def run(self):
        time.sleep(1)
        while not self.e.is_set():
            self.sendImageToServer()
            time.sleep(5)

    def sendImageToServer(self):
        sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM)  
        sock.connect((HOST,PORT)) 

        lock.acquire()
        if frame != None:
            encode_param = [int(cv2.IMWRITE_JPEG_QUALITY),90]        
            jpegstring = cv2.imencode('.jpeg',frame,encode_param)[1].tostring()
            print len(jpegstring)
            sock.send(jpegstring)
        lock.release()
        sock.close()  
        
    def stop(self):
        self.e.set()
        self.join()

if __name__ == '__main__':  

    cameraid = 0
    capture = cv2.VideoCapture(0)

    if capture.isOpened() is False:
        print "Could not open camera"  
        exit()  

    st = SendThread()
    st.start()

    while 1:
        #frameの取得
        lock.acquire()
        ret, frame= capture.read()
        lock.release()
        if ret == False:
            print "capture error.\n"
            break

        cv2.imshow('Capture',frame)
        key=cv2.waitKey(100)
        if(int(key)>0): break
        print "ok\n"

    st.stop()
        
